name: Flake Check

on:
  push:
    branches:
      - main
    paths:
      - '**.nix'
      - '**.sh'
      - '**.py'
      - '**.lua'
  pull_request:
  workflow_dispatch:
env:
  nix_conf: |
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://cache.garnix.io https://numtide.cachix.org https://hyprland.cachix.org https://yazi.cachix.org https://ags.cachix.org https://pwndbg.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= pwndbg.cachix.org-1:HhtIpP7j73SnuzLgobqqa8LVTng5Qi36sQtNt79cD3k= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc= ags.cachix.org-1:naAvMrz0CuYqeyGNyLgE010iUiuf/qx6kYrUv3NwAJ8= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= yazi.cachix.org-1:Dcdz63NZKfvUCbDGngQDAZq6kOroIrFoyO064uvLh8k=
    keep-env-derivations = true
    keep-outputs = true

jobs:
  flake-checks:
    name: Nix Flake Checks
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}

      - uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1G = 1073741824
          gc-max-store-size-linux: 1G
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: nix-${{ runner.os }}-
          # created more than this number of seconds ago
          # relative to the start of the `Post Restore and save Nix store` phase
          purge-created: 0
          # except any version with the key that is the same as the `primary-key`
          purge-primary-key: never

      - name: Run Nix Flake Check
        run: nix flake check -L
